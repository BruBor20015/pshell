#!/bin/bash

#################################################################################
#
# Copyright (c) 2009, Ron Iovine, All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of Ron Iovine nor the names of its contributors
#       may be used to endorse or promote products derived from this software
#       without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY Ron Iovine ''AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL Ron Iovine BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER
# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
#################################################################################

if [ $# -lt 1 -o $# -gt 3 -o "$1" == "-h" -o "$1" == "-help" ]
then
  echo
  echo "Usage: buildPshell {-all | -pshell | -lib | -demo} [-readline] [-clean]"
  echo
  echo "  where:"
  echo "    all      - build all components of the pshell package"
  echo "    pshell   - build the pshell UDP stand-alone client program only"
  echo "    lib      - build the pshell link libraries only (shared, static and stub)"
  echo "    demo     - build the pshell stand-alone demo program only"
  echo "    readline - build the with the readline development and link libraries"
  echo "    clean    - remove all old binaries and libraries"
  echo
  exit 1
fi

if [ -z "$PSHELL_INSTALL" ]
then
  echo "ERROR: Environment variable PSHELL_INSTALL not defined"
  exit 1
fi

if [ $# -ge 2 -a "$2" == "-readline" ]
then
  READLINE="-DREADLINE"
  READLINELIB="-lreadline -lcurses"
else
  READLINE=""
  READLINELIB=""
fi

if [ $# -eq 2 -a "$2" == "-clean" ]
then
  echo "Cleaning directory bin..."
  rm $PSHELL_INSTALL/bin/*
  echo "Cleaning directory lib..."
  rm $PSHELL_INSTALL/lib/*
fi

if [ $# -eq 3 -a "$3" == "-clean" ]
then
  echo "Cleaning directory bin..."
  rm $PSHELL_INSTALL/bin/*
  echo "Cleaning directory lib..."
  rm $PSHELL_INSTALL/lib/*
fi

if [ "$1" == "-all" ]
then
  echo "Building pshell package..."
  echo "Install directory: $PSHELL_INSTALL"
fi

if [ "$1" == "-pshell" -o "$1" == "-all" ]
then
  cd $PSHELL_INSTALL/src
  echo "Building pshell..."
  g++ -I../include $READLINE -Wall \
  PshellClient.c \
  -lnsl $READLINELIB \
  -o ../bin/pshell
fi

if [ "$1" == "-lib" -o "$1" == "-all" ]
then
  cd $PSHELL_INSTALL/src
  echo "Building libpshell-server-full.a..."
  g++ -I../include -DVSNPRINTF $READLINE -Wall -c PshellServer.c -o PshellServer.o
  g++ -I../include -DTF_FAST_FILENAME_LOOKUP -DTF_NATIVE_DISCRETE_LEVELS -DTF_USE_COLORS -Wall -c TraceFilter.c -o TraceFilter.o
  g++ -I../include -Wall -c TraceLog.c -o TraceLog.o
  ar rcs ../lib/libpshell-server-full.a \
  PshellServer.o \
  TraceFilter.o \
  TraceLog.o 
  rm *.o

  echo "Building libpshell-server-full.so..."
  g++ -I../include -DVSNPRINTF $READLINE -Wall -fPIC -c PshellServer.c -o PshellServer.o
  g++ -I../include -DTF_FAST_FILENAME_LOOKUP -DTF_NATIVE_DISCRETE_LEVELS -DTF_USE_COLORS -Wall -fPIC -c TraceFilter.c -o TraceFilter.o
  g++ -I../include -Wall -fPIC -c TraceLog.c -o TraceLog.o
  g++ -shared -o ../lib/libpshell-server-full.so \
  PshellServer.o \
  TraceFilter.o \
  TraceLog.o
  rm *.o

  echo "Building libpshell-server-stub.a..."
  g++ -I../include -DTF_FAST_FILENAME_LOOKUP -Wall -c PshellStub.c -o PshellStub.o
  ar rcs ../lib/libpshell-server-stub.a \
  PshellStub.o
  rm *.o

  echo "Building libpshell-server-stub.so..."
  g++ -I../include -DTF_FAST_FILENAME_LOOKUP -Wall -fPIC -c PshellStub.c -o PshellStub.o
  g++ -shared -o ../lib/libpshell-server-stub.so \
  PshellStub.o
  rm *.o

  echo "Building libpshell-control.so..."
  g++ -I../include -Wall -fPIC -c PshellControl.c -o PshellControl.o
  g++ -shared -o ../lib/libpshell-control.so \
  PshellControl.o
  rm *.o
  
  echo "Building libpshell-control.a..."
  g++ -I../include -Wall -c PshellControl.c -o PshellControl.o
  ar rcs ../lib/libpshell-control.a \
  PshellControl.o
  rm *.o
fi

if [ "$1" == "-all" ]
then
  echo "Setting libpshell-server.so to libpshell-server-full.so..."
  setPshellLib -full
fi

if [ "$1" == "-demo" -o "$1" == "-all" ]
then
  cd $PSHELL_INSTALL/demo
  
  echo "Building pshellServerDemo program..."
  g++ -Wall -I../include \
  pshellServerDemo.c \
  -lpthread -L../lib -lpshell-server $READLINELIB \
  -o ../bin/pshellServerDemo
  
  echo "Building pshellControlDemo program..."
  g++ -Wall -I../include \
  pshellControlDemo.c \
  -lpthread -L../lib -lpshell-control \
  -o ../bin/pshellControlDemo
  
  echo "Building traceFilterDemo program..."
  g++ -Wall -I../include -DTF_FAST_FILENAME_LOOKUP -DTF_NATIVE_DISCRETE_LEVELS \
  traceFilterDemo.c \
  -lpthread -L../lib -lpshell-server $READLINELIB \
  -o ../bin/traceFilterDemo
  
fi

if [ "$1" == "-all" ]
then
  echo "pshell package build complete!!"
fi
